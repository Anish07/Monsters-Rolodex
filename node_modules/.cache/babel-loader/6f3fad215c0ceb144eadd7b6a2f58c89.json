{"ast":null,"code":"var _jsxFileName = \"/Users/anishahuja/Desktop/Code/Complete React Developer 2022/monsters-rolodex/src/App.js\";\nimport { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState(() => {\n      return {\n        monsters: users\n      };\n    }, () => {\n      console.log(this.state);\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-box\",\n        type: \"search\",\n        placeholder: \"search monsters\",\n        onChange: event => {\n          const searchString = event.target.value.toLocaleLowerCase();\n          const filteredMonsters = this.state.monsters.filter(monster => {\n            return monster.name.toLocaleLowerCase().includes(searchString);\n          });\n          this.setState(() => {\n            return {\n              monsters: filteredMonsters\n            };\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), this.state.monsters.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: monster.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/anishahuja/Desktop/Code/Complete React Developer 2022/monsters-rolodex/src/App.js"],"names":["Component","logo","App","constructor","state","monsters","componentDidMount","fetch","then","response","json","users","setState","console","log","render","event","searchString","target","value","toLocaleLowerCase","filteredMonsters","filter","monster","name","includes","map","id"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,KAAD,IACJ,KAAKC,QAAL,CACE,MAAM;AACJ,aAAO;AAACP,QAAAA,QAAQ,EAAEM;AAAX,OAAP;AACD,KAHH,EAIE,MAAM;AACJE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAjB;AACD,KANH,CAHJ;AAYD;;AAEDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,WAAW,EAAC,iBAHd;AAIE,QAAA,QAAQ,EAAGC,KAAD,IAAW;AACnB,gBAAMC,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,iBAAnB,EAArB;AACA,gBAAMC,gBAAgB,GAAG,KAAKjB,KAAL,CAAWC,QAAX,CAAoBiB,MAApB,CAA4BC,OAAD,IAAa;AAC/D,mBAAOA,OAAO,CAACC,IAAR,CAAaJ,iBAAb,GAAiCK,QAAjC,CAA0CR,YAA1C,CAAP;AACD,WAFwB,CAAzB;AAIA,eAAKL,QAAL,CAAc,MAAM;AAClB,mBAAO;AAAEP,cAAAA,QAAQ,EAAGgB;AAAb,aAAP;AACD,WAFD;AAGD;AAbH;AAAA;AAAA;AAAA;AAAA,cADF,EAgBG,KAAKjB,KAAL,CAAWC,QAAX,CAAoBqB,GAApB,CAAyBH,OAAD,IAAa;AACpC,4BACE;AAAA,iCACE;AAAA,sBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF,WAAUD,OAAO,CAACI,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA,CAhBH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AAnDyB;;AAsD5B,eAAezB,GAAf","sourcesContent":["import { Component } from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: []\n    };\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => \n        this.setState(\n          () => {\n            return {monsters: users}\n          },\n          () => {\n            console.log(this.state);\n          }\n        )\n      );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <input \n          className='search-box' \n          type='search' \n          placeholder='search monsters'\n          onChange={(event) => {\n            const searchString = event.target.value.toLocaleLowerCase();\n            const filteredMonsters = this.state.monsters.filter((monster) => {\n              return monster.name.toLocaleLowerCase().includes(searchString);\n            });\n\n            this.setState(() => {\n              return { monsters : filteredMonsters};\n            })\n          }} \n        />\n        {this.state.monsters.map((monster) => {\n          return (\n            <div key={monster.id}>\n              <h1>{monster.name}</h1>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}